{"version":3,"sources":["components/gnomes.js","App.js","reportWebVitals.js","index.js"],"names":["Gnome","id","name","thumbnail","className","src","alt","App","useState","gnomes","setGnomes","useEffect","fetch","then","res","json","data","console","log","Brastlewark","length","map","gnome","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAWeA,EATD,SAAC,GAAD,EAAGC,GAAH,IAAOC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAb,OACZ,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKF,EAAWG,IAAKJ,IAC1B,qBAAKE,UAAU,aAAf,SACE,6BAAKF,UCqBIK,MApBf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAWA,OATAC,qBAAU,WACRC,MANF,0EAOKC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZN,EAAUM,EAAKG,kBAElB,IAGD,qBAAKf,UAAU,kBAAf,SACGK,EAAOW,OAAS,GACfX,EAAOY,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,eAA0BA,GAAdA,EAAMrB,UCVjCsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.79eb5870.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Gnome = ({ id, name, thumbnail }) => (\r\n  <div className=\"gnome\">\r\n    <img src={thumbnail} alt={name} />\r\n    <div className=\"gnome-name\">\r\n      <h3>{name}</h3>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Gnome;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport Gnome from \"./components/gnomes\";\n\nconst JSON_URL =\n  \"https://raw.githubusercontent.com/rrafols/mobile_test/master/data.json\";\n\nfunction App() {\n  const [gnomes, setGnomes] = useState([]);\n\n  useEffect(() => {\n    fetch(JSON_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setGnomes(data.Brastlewark);\n      });\n  }, []);\n\n  return (\n    <div className=\"gnome-container\">\n      {gnomes.length > 0 &&\n        gnomes.map((gnome) => <Gnome key={gnome.id} {...gnome} />)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}